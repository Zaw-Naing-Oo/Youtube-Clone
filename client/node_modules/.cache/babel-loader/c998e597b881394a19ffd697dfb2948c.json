{"ast":null,"code":"var _jsxFileName = \"/home/oscar/React/Youtube clone/client/src/components/Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getStorage, ref as storageReff, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from '../firebase';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: #000000a7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c = Container;\nconst Wrapper = styled.div`\n  width: 600px;\n  height: 600px;\n  background-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.bgLighter;\n}};\n  color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.text;\n}};\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  position: relative;\n`;\n_c2 = Wrapper;\nconst Close = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n`;\n_c3 = Close;\nconst Title = styled.h1`\n  text-align: center;\n`;\n_c4 = Title;\nconst Input = styled.input`\n  border: 1px solid ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.soft;\n}};\n  color: ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.text;\n}};\n  border-radius: 3px;\n  padding: 10px;\n  background-color: transparent;\n  z-index: 999;\n`;\n_c5 = Input;\nconst Desc = styled.textarea`\n  border: 1px solid ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.soft;\n}};\n  color: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.text;\n}};\n  border-radius: 3px;\n  padding: 10px;\n  background-color: transparent;\n`;\n_c6 = Desc;\nconst Button = styled.button`\n  border-radius: 3px;\n  border: none;\n  padding: 10px 20px;\n  font-weight: 500;\n  cursor: pointer;\n  background-color: ${_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.soft;\n}};\n  color: ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.textSoft;\n}};\n`;\n_c7 = Button;\nconst Label = styled.label`\n  font-size: 14px;\n`;\n_c8 = Label;\n\nconst Upload = _ref9 => {\n  _s();\n\n  let {\n    setOpen\n  } = _ref9;\n  const [image, setImage] = useState(undefined);\n  const [video, setVideo] = useState(undefined);\n  const [imgPercentage, setImgPercentage] = useState(0);\n  const [videoPercentage, setVideoPercentage] = useState(0);\n  const [inputs, setInputs] = useState({});\n  const [tags, setTags] = useState([]);\n\n  const handleInput = e => {\n    setInputs(prev => {\n      return { ...prev,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  const handleTags = e => {\n    setTags(e.target.value);\n  };\n\n  const uploadFile = (file, urlType) => {\n    const storage = getStorage(app);\n    const fileName = new Date().getTime() + file.name;\n    const storageRef = storageReff(storage, fileName);\n    const uploadTask = uploadBytesResumable(storageRef, file); // Register three observers:\n    // 1. 'state_changed' observer, called any time the state changes\n    // 2. Error observer, called on failure\n    // 3. Completion observer, called on successful completion\n\n    uploadTask.on('state_changed', snapshot => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      urlType === \"imgUrl\" ? setImgPercentage(Math.round(progress)) : setVideoPercentage(Math.round(progress));\n      console.log('Upload is ' + progress + '% done');\n\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n\n        case 'running':\n          console.log('Upload is running');\n          break;\n\n        default:\n          break;\n      }\n    }, error => {// Handle unsuccessful uploads\n    }, () => {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setInputs(prev => {\n          return { ...prev,\n            [urlType]: downloadURL\n          };\n        });\n      });\n    });\n  };\n\n  const handleUpload = async e => {\n    e.preventDefault();\n    const res = await axios.post(\"/videos\", { ...inputs,\n      tags\n    });\n    setOpen(false);\n    res.status === 200 && navigate(`/video/${res.data._id}`);\n  };\n\n  useEffect(() => {\n    image && uploadFile(image, \"imgUrl\");\n  }, [image]);\n  useEffect(() => {\n    video && uploadFile(video, \"videoUrl\");\n  }, [video]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Close, {\n        onClick: () => setOpen(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Upload a New Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), videoPercentage > 0 ? \"uploading;\" + videoPercentage + \"%\" : /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: e => setVideo(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Title\",\n        name: \"title\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Desc, {\n        placeholder: \"Description\",\n        name: \"description\",\n        rows: 8,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Separate the tags with commas.\",\n        onChange: handleTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), imgPercentage > 0 ? \"uploading\" + imgPercentage + \"%\" : /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Upload, \"cL23M4tUEfPMNZXdvG4dVa/OmAc=\");\n\n_c9 = Upload;\nexport default Upload;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Close\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Input\");\n$RefreshReg$(_c6, \"Desc\");\n$RefreshReg$(_c7, \"Button\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Upload\");","map":{"version":3,"names":["React","useState","useEffect","styled","getStorage","ref","storageReff","uploadBytesResumable","getDownloadURL","app","axios","useNavigate","Container","div","Wrapper","theme","bgLighter","text","Close","Title","h1","Input","input","soft","Desc","textarea","Button","button","textSoft","Label","label","Upload","setOpen","image","setImage","undefined","video","setVideo","imgPercentage","setImgPercentage","videoPercentage","setVideoPercentage","inputs","setInputs","tags","setTags","handleInput","e","prev","target","name","value","handleTags","uploadFile","file","urlType","storage","fileName","Date","getTime","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","Math","round","console","log","state","error","then","downloadURL","handleUpload","preventDefault","res","post","status","navigate","data","_id","files"],"sources":["/home/oscar/React/Youtube clone/client/src/components/Upload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'; \nimport { getStorage, ref as storageReff, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from '../firebase'\nimport axios from 'axios'\nimport { useNavigate } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: #000000a7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 600px;\n  height: 600px;\n  background-color: ${({ theme }) => theme.bgLighter};\n  color: ${({ theme }) => theme.text};\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  position: relative;\n`;\nconst Close = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n`;\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst Input = styled.input`\n  border: 1px solid ${({ theme }) => theme.soft};\n  color: ${({ theme }) => theme.text};\n  border-radius: 3px;\n  padding: 10px;\n  background-color: transparent;\n  z-index: 999;\n`;\nconst Desc = styled.textarea`\n  border: 1px solid ${({ theme }) => theme.soft};\n  color: ${({ theme }) => theme.text};\n  border-radius: 3px;\n  padding: 10px;\n  background-color: transparent;\n`;\nconst Button = styled.button`\n  border-radius: 3px;\n  border: none;\n  padding: 10px 20px;\n  font-weight: 500;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.soft};\n  color: ${({ theme }) => theme.textSoft};\n`;\nconst Label = styled.label`\n  font-size: 14px;\n`;\n\nconst Upload = ({ setOpen }) => {\n\n    const [image, setImage] = useState(undefined)\n    const [video, setVideo] = useState(undefined)\n    const [imgPercentage, setImgPercentage] = useState(0)\n    const [videoPercentage, setVideoPercentage] = useState(0)\n    const [inputs, setInputs] = useState({});\n    const [tags, setTags] = useState([]);\n\n    const handleInput = (e) => {\n      setInputs( prev => {\n        return {...prev, [e.target.name] : e.target.value }\n      })\n    };\n\n    const handleTags = (e) => {\n       setTags(e.target.value);\n    }\n\n    const uploadFile = (file, urlType) => {\n      const storage = getStorage(app);\n      const fileName = new Date().getTime() + file.name\n      const storageRef = storageReff(storage, fileName);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n\n      // Register three observers:\n      // 1. 'state_changed' observer, called any time the state changes\n      // 2. Error observer, called on failure\n      // 3. Completion observer, called on successful completion\n      uploadTask.on('state_changed', \n      (snapshot) => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        urlType === \"imgUrl\" ? setImgPercentage(Math.round(progress)) : setVideoPercentage(Math.round(progress));\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n          case 'running':\n            console.log('Upload is running');\n            break;\n            default:\n              break;\n        }\n      }, \n      (error) => {\n        // Handle unsuccessful uploads\n      }, \n      () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setInputs((prev) => {\n            return { ...prev, [urlType]: downloadURL };\n          })\n        });\n      }\n    );    \n    };\n\n\n    const handleUpload = async (e)=>{\n      e.preventDefault();\n      const res = await axios.post(\"/videos\", {...inputs, tags})\n      setOpen(false)\n      res.status===200 && navigate(`/video/${res.data._id}`)\n    }\n\n    useEffect(() => {\n      image && uploadFile(image, \"imgUrl\");  \n    }, [image])\n\n    useEffect(() => {\n      video && uploadFile(video, \"videoUrl\");  \n    }, [video])\n    \n\n  return (\n    <Container>\n      <Wrapper>\n        <Close onClick={() => setOpen(false)}>X</Close>\n        <Title>Upload a New Video</Title>\n        <Label>Video:</Label>\n        { videoPercentage > 0 ? (\n           \"uploading;\" + videoPercentage + \"%\"\n        ) : (\n           <Input\n            type=\"file\"\n            accept=\"video/*\"\n            onChange={ (e) => setVideo(e.target.files[0])}\n         />\n        ) }\n        <Input\n          type=\"text\"\n          placeholder=\"Title\"\n          name=\"title\"\n          onChange={ handleInput }\n        />\n        <Desc\n          placeholder=\"Description\"\n          name=\"description\"\n          rows={8}\n          onChange = { handleInput }\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Separate the tags with commas.\"\n          onChange={ handleTags}\n        />\n        <Label>Image:</Label>\n        { imgPercentage > 0 ? (\n          \"uploading\" + imgPercentage + \"%\"\n        ) : (\n          <Input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => setImage(e.target.files[0])}\n          />\n        )}\n        <Button onClick={handleUpload}>Upload</Button>\n      </Wrapper>\n    </Container>\n  )\n}\n\nexport default Upload"],"mappings":"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"},"metadata":{},"sourceType":"module"}