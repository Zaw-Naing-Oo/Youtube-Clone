{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport userReducer from '../features/user/userSlice';\nimport videoReducer from '../features/video/videoSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  video: videoReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","userReducer","videoReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","persistConfig","key","version","rootReducer","user","video","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/home/oscar/React/Youtube clone/client/src/app/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport userReducer from '../features/user/userSlice'\nimport videoReducer from '../features/video/videoSlice'\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n}\n\nconst rootReducer = combineReducers({user: userReducer, video: videoReducer })\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n  reducer: persistReducer,\n  middleware: (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n})\n\nexport let persistor = persistStore(store)"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAGA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBC,OAAO,EAAE,CAFW;EAGpBJ;AAHoB,CAAtB;AAMA,MAAMK,WAAW,GAAGhB,eAAe,CAAC;EAACiB,IAAI,EAAEhB,WAAP;EAAoBiB,KAAK,EAAEhB;AAA3B,CAAD,CAAnC;AAEA,MAAMiB,gBAAgB,GAAGf,cAAc,CAACS,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMI,KAAK,GAAGrB,cAAc,CAAC;EAClCsB,OAAO,EAAEjB,cADyB;EAElCkB,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACpB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD;AAHc,CAAD,CAA5B;AAUP,OAAO,IAAIgB,SAAS,GAAGvB,YAAY,CAACiB,KAAD,CAA5B"},"metadata":{},"sourceType":"module"}